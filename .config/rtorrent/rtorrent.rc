#              _   _
#  _ __   __ _| |_| |__  ___
# | '_ \ / _` | __| '_ \/ __|
# | |_) | (_| | |_| | | \__ \
# | .__/ \__,_|\__|_| |_|___/
# |_|
#
method.insert = cfg.basedir,  private|const|string, (cat,"~/.config/rtorrent/")
method.insert = cfg.download, private|const|string, (cat,"~/torrents/")
method.insert = cfg.logs,     private|const|string, (cat,(cfg.basedir),"log/")
method.insert = cfg.logfile,  private|const|string, (cat,(cfg.logs),"rtorrent-",(system.time),".log")
method.insert = cfg.session,  private|const|string, (cat,(cfg.basedir),".session/")
method.insert = cfg.watch,    private|const|string, (cat,(cfg.basedir),"watch/")

#                  _
#  _ __ ___   __ _(_)_ __
# | '_ ` _ \ / _` | | '_ \
# | | | | | | (_| | | | | |
# |_| |_| |_|\__,_|_|_| |_|
#
## create paramount dirs
execute.throw = sh, -c, (cat,\
    "mkdir -p \"",(cfg.download),"\" ",\
    "\"",(cfg.logs),"\" ",\
    "\"",(cfg.session),"\" ",\
    "\"",(cfg.watch),"/load\" ",\
    "\"",(cfg.watch),"/start\" ")

## fixed port for incoming traffic
network.port_range.set = 53129-53129
network.port_random.set = no

## disable DHT, PEX and UDP support (useless for private trackers)
dht.mode.set = disable
protocol.pex.set = no
trackers.use_udp.set = no

## peer settings
throttle.max_uploads.set = 100
throttle.max_uploads.global.set = 300
throttle.min_peers.normal.set = 99
throttle.max_peers.normal.set = 100
throttle.min_peers.seed.set = -1
throttle.max_peers.seed.set = -1
trackers.numwant.set = 100

protocol.encryption.set = allow_incoming,try_outgoing,enable_retry

## optimised settings for `ulimit -n` of 1024
network.http.max_open.set = 50
network.max_open_files.set = 600
network.max_open_sockets.set = 300

## memory resource usage
pieces.memory.max.set = 6144M

## reduce disk usage by loading file pages into the kernel
pieces.preload.type.set = 2

## use bigger socket send/receive buffer size (consumes more memory)
network.receive_buffer.size.set =  4M
network.send_buffer.size.set    = 12M

#            _
#  _ __ ___ (_)___  ___
# | '_ ` _ \| / __|/ __|
# | | | | | | \__ \ (__
# |_| |_| |_|_|___/\___|
#
## basic operational settings
session.path.set = (cat, (cfg.session))
directory.default.set = (cat, (cfg.download))
log.execute = (cat, (cfg.logs), "execute.log")
execute.nothrow = sh, -c, (cat, "echo >",\
    (session.path), "rtorrent.pid", " ",(system.pid))

## other operational settings
encoding.add = utf8
system.umask.set = 0027
system.cwd.set = (directory.default)
network.http.dns_cache_timeout.set = 25

## additional values and commands
method.insert = system.startup_time, value|const, (system.time)
method.insert = d.data_path, simple,\
    "if=(d.is_multi_file),\
        (cat, (d.directory), /),\
        (cat, (d.directory), /, (d.name))"
method.insert = d.session_file, simple, "cat=(session.path), (d.hash), .torrent"

#                _       _           _ _
# __      ____ _| |_ ___| |__     __| (_)_ __ ___
# \ \ /\ / / _` | __/ __| '_ \   / _` | | '__/ __|
#  \ V  V / (_| | || (__| | | | | (_| | | |  \__ \
#   \_/\_/ \__,_|\__\___|_| |_|  \__,_|_|_|  |___/
#
## load torrents and do nothing
schedule2 = watch_load, 11, 10, ((load.verbose, (cat, (cfg.watch), "load/*.torrent")))
## load torrents and start downloading them right away
schedule2 = watch_start, 10, 10, ((load.start_verbose, (cat, (cfg.watch), "start/*.torrent")))

#                 _   _
#  ___  ___  _ __| |_(_)_ __   __ _
# / __|/ _ \| '__| __| | '_ \ / _` |
# \__ \ (_) | |  | |_| | | | | (_| |
# |___/\___/|_|   \__|_|_| |_|\__, |
#                             |___/
#
## show active torrents exclusively upon pressing ‘0’ key
schedule2 = filter_active,30,30,"view.filter = active,\"or={d.up.rate=,d.down.rate=}\""
## sort the main view by ratio upon pressing ‘1’ key
view.sort_current = main,greater=d.ratio=
view.sort_new = main,less=d.ratio=
view.sort = main

#  _                   _
# | | ___   __ _  __ _(_)_ __   __ _
# | |/ _ \ / _` |/ _` | | '_ \ / _` |
# | | (_) | (_| | (_| | | | | | (_| |
# |_|\___/ \__, |\__, |_|_| |_|\__, |
#          |___/ |___/         |___/
#
print = (cat, "Logging to ", (cfg.logfile))
log.open_file = "log", (cfg.logfile)
log.add_output = "info", "log"
